name: Build binaries

on:
  schedule:
    - cron: "0 5 */1 * *"
  push:
  pull_request:
    paths:
    - '.github/workflows/*.yml'
    - './scripts/*.sh'

jobs:
  build:
    runs-on: self-hosted
    steps:
      # Checkout the repository
      - name: Checkout builder
        uses: actions/checkout@v2

      # Get the current date
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      # Install the ARM toolchain
      - name: Install arm toolchain
        run: ./scripts/install_arm.sh

      # Install the ESP-IDF toolchain
      - name: Install ESP-IDF toolchain
        run: ./scripts/install_espidf.sh

      # Checkout necessary submodules or projects
      - name: Checkout ulab/micropython
        run: ./scripts/init.sh

      # Create a directory for artifacts
      - name: Create artifacts directory
        run: mkdir ./artifacts

      # Ensure all relevant scripts are executable
      - name: Give execution permissions
        run: chmod +x ./scripts/esp32/generic-s3-spiram-16mb-ota.sh

      # Check the hostname and set environment variables accordingly
      - name: Check hostname and set MAKEOPTS
        run: |
          if [ "$(hostname)" = "reefpi" ]; then
            echo "MAKEOPTS=-j2" >> $GITHUB_ENV
          fi

      # Compile the project for ESP32-S3 with specific configuration
      - name: Compile for ESP32-S3 8MB SPIRAM/16MB Flash
        run: ./scripts/esp32/generic-s3-spiram-16mb-ota.sh

      # Extract the branch name and set a dynamic tag for the build
      - name: Extract Branch Name and Set Tag
        if: github.event_name == 'push'
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "RELEASE_TAG=${BRANCH_NAME}-${DATE}-${SHORT_SHA}" >> $GITHUB_ENV

      # Create a GitHub release with the artifacts
      - name: Create GitHub Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "${{ env.RELEASE_TAG }}"
          title: "Release ${{ env.RELEASE_TAG }}"
          files: ./artifacts/*
        if: env.RELEASE_TAG != ''
